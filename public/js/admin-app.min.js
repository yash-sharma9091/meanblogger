!function(){"use strict";angular.module("app.factories",[]).factory("AuthenticationService",function(){var auth={isLogged:!1};return auth}).factory("RestSvr",["$http",function($http){return{login:function(apiUrl,data){return $http.post(apiUrl,data).then(function(response){return response.data.errors?{errors:response.data.errors}:{user:response.data.user,token:response.data.token}})},paginate:function(apiUrl,params,queryString){var p=angular.isUndefined(params)?"":params,q=angular.isUndefined(queryString)?"":queryString;return $http.get(apiUrl+p,q).then(function(response){return{records:response.data.records,paging:response.data.paging}})},get:function(apiUrl,params){angular.isUndefined(params)?null:params;return $http.get(apiUrl,params).then(function(response){return{records:response.data.records}})},getById:function(option){return $http.get(option.apiUrl+option.id).then(function(response){return{record:response.data.record}})},post:function(apiUrl,data){return $http.post(apiUrl,data).then(function(response){return{type:response.data.message,text:response.data.post}})},put:function(option){return $http.put(option.apiUrl+option.id,option.data).then(function(response){return{type:response.data.message.type,text:response.data.message.text}})},"delete":function(option){return $http["delete"](option.apiUrl+option.id).then(function(response){return{type:response.data.message.type,text:response.data.message.text}})}}}])}(),function(){"use strict";angular.module("app.directives",[]).directive("header",function(){return{restrict:"A",templateUrl:"partials/header.html"}}).directive("sidebar",function(){return{restrict:"A",templateUrl:"partials/sidebar.html",controller:["$scope","$location",function($scope,$location){}]}}).directive("adminHeader",function(){return{restrict:"A",templateUrl:"partials/admin-header.html",controller:["$scope","$filter",function($scope,$filter){}]}}).directive("adminSidebar",function(){return{restrict:"A",templateUrl:"partials/admin-sidebar.html",controller:["$scope","$filter",function($scope,$filter){}]}})}(),function(){"use strict";angular.module("app",["ngRoute","app.controllers","app.factories","app.directives","angular-loading-bar","ui.bootstrap","LocalStorageModule","angularFileUpload"]).config(["$routeProvider","cfpLoadingBarProvider","$httpProvider",function($routeProvider,cfpLoadingBarProvider,$httpProvider){cfpLoadingBarProvider.includeSpinner=!1,$routeProvider.when("/",{templateUrl:"admin/views/login.html",controller:"AdminController"}).when("/dashboard",{templateUrl:"dashboard/views/dashboard.html",controller:"DashboardController"}).when("/posts",{templateUrl:"admin/views/admin_posts.html",controller:"AdminPostController"}).when("/create",{templateUrl:"admin/views/create_posts.html",controller:"CreateController"}).otherwise({redirectTo:"/"}),$httpProvider.defaults.useXDomain=!0,delete $httpProvider.defaults.headers.common["X-Requested-With"];var interceptor=["$q","$window","$rootScope","localStorageService","AuthenticationService","$timeout",function($q,$window,$rootScope,localStorageService,AuthenticationService,$timeout){return{request:function(config){config.headers=config.headers||{};var token=localStorageService.get("token");return token&&(config.headers.Authorization="Bearer "+token,AuthenticationService.isLogged=1,$rootScope.isLogged=1),config},requestError:function(rejection){return $q.reject(rejection)},response:function(response){return $timeout(function(){$rootScope.Message={type:"fade"}},5e3),response||$q.when(response)},responseError:function(rejection){return null!==rejection&&400===rejection.status&&(console.log(rejection),localStorageService.remove("token"),localStorageService.remove("user"),AuthenticationService.isLogged=!1,$rootScope.isLogged=!1,$window.location.href="admin.html"),$q.reject(rejection)}}}];$httpProvider.interceptors.push(interceptor)}]).run(["$rootScope","$location","localStorageService","AuthenticationService",function($rootScope,$location,localStorageService,AuthenticationService){$rootScope.$on("$routeChangeStart",function(event,nextRoute,currentRoute){if(null===nextRoute||AuthenticationService.isLogged||localStorageService.get("user")){console.log("else");var token=localStorageService.get("token");"/"==$location.path()&&token&&(console.log("againif"),$location.path("/dashboard"))}else console.log("if"),AuthenticationService.isLogged=0,$location.path("/")}),$rootScope.clearToken=function(){localStorageService.remove("token"),localStorageService.remove("user"),$rootScope.isLogged=!1,delete $rootScope.user,$location.path("/")},$rootScope.user=localStorageService.get("user")}]),angular.module("app.controllers",[])}(),function(){"use strict";angular.module("app.controllers").controller("AdminController",["$scope","$rootScope","RestSvr","localStorageService","AuthenticationService","$location",function($scope,$rootScope,RestSvr,localStorageService,AuthenticationService,$location){console.log("Admin"),$scope.login=function(isValid){isValid&&RestSvr.login("/users/login",$scope.user).then(function(response){$scope.error=null,response.errors?$scope.error=response.errors:(localStorageService.set("token",response.token),localStorageService.set("user",{id:response.user._id,username:response.user.username,email:response.user.email,status:response.user.status,created:response.user.created}),AuthenticationService.isLogged=!0,$rootScope.isLogged=!0,$rootScope.user=localStorageService.get("user"),$location.path("/dashboard"))})}}]).controller("AdminPostController",["$scope","RestSvr",function($scope,RestSvr){$scope.paging={page:1};var load=function(){RestSvr.get("/posts/paginate",{params:{page:$scope.paging.page}}).then(function(response){$scope.posts=response.records,$scope.paging=response.paging})};$scope.pageChanged=function(){load()},load()}]).controller("CreateController",["$scope","$location","FileUploader","localStorageService","$window","$timeout",function($scope,$location,FileUploader,localStorageService,$window,$timeout){$scope.uploader=new FileUploader({url:"/posts",headers:{Authorization:"Bearer "+localStorageService.get("token")},alias:"image"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onBeforeUploadItem=function(item){item.formData.push($scope.post)},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){console.log(response.message)},$scope.uploader.onSuccessItem=function(item,response,status,headers){$scope.uploader.clearQueue(),response.post&&$location.path("/posts")},$scope.save=function(){$scope.uploader.uploadAll()}}])}(),function(){"use strict";angular.module("app.controllers").controller("DashboardController",["$scope","RestSvr",function($scope,RestSvr){console.log("DashboardController")}])}();