!function(){"use strict";angular.module("app",["ngRoute","ngAnimate","app.controllers","app.factories","app.directives","ui.bootstrap"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"posts/views/posts.html",controller:"PostController"}).otherwise({redirectTo:"/"})}])}(),function(){"use strict";angular.module("app.factories",[]).factory("AuthenticationService",function(){var auth={isLogged:!1};return auth}).factory("socketio",["$rootScope","$location",function($rootScope,$location){var socket=io.connect();return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})}}}]).factory("RestSvr",["$http",function($http){return{login:function(apiUrl,data){return $http.post(apiUrl,data).then(function(response){return response.data.errors?{errors:response.data.errors}:{user:response.data.user,token:response.data.token}})},paginate:function(apiUrl,params,queryString){var p=angular.isUndefined(params)?"":params,q=angular.isUndefined(queryString)?"":queryString;return $http.get(apiUrl+p,q).then(function(response){return{records:response.data.records,paging:response.data.paging}})},get:function(apiUrl,params){angular.isUndefined(params)?null:params;return $http.get(apiUrl,params).then(function(response){return{records:response.data.records}})},getById:function(option){return $http.get(option.apiUrl+option.id).then(function(response){return{record:response.data.record}})},post:function(option){return $http.post(option.apiUrl,option.data).then(function(response){return{type:response.data.message.type,text:response.data.message.text}})},put:function(option){return $http.put(option.apiUrl+option.id,option.data).then(function(response){return{type:response.data.message.type,text:response.data.message.text}})},"delete":function(option){return $http["delete"](option.apiUrl+option.id).then(function(response){return{type:response.data.message.type,text:response.data.message.text}})}}}])}(),function(){"use strict";angular.module("app.directives",[]).directive("header",function(){return{restrict:"A",templateUrl:"partials/header.html"}}).directive("sidebar",function(){return{restrict:"A",templateUrl:"partials/sidebar.html",controller:["$scope","$location",function($scope,$location){}]}}).directive("adminHeader",function(){return{restrict:"A",templateUrl:"partials/admin-header.html",controller:["$scope","$filter",function($scope,$filter){}]}}).directive("adminSidebar",function(){return{restrict:"A",templateUrl:"partials/admin-sidebar.html",controller:["$scope","$filter",function($scope,$filter){}]}})}(),function(){"use strict";angular.module("app.controllers",[]).controller("PostController",["$scope","$http","$uibModal","socketio",function($scope,$http,$uibModal,socketio){function NewPostCreated($scope,$uibModalInstance){$scope.modelTitle="Create Post",$scope.button="Save",$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.save=function(){$http.post("/posts",$scope.post).then(function(response){socketio.emit("syncposts"),$uibModalInstance.close()})}}function updateSelectedPost($scope,$uibModalInstance,post){$scope.modelTitle="Update Post",$scope.button="Update",$scope.cancel=function(){$uibModalInstance.dismiss("cancel")},$scope.post=post,$scope.save=function(){$http.put("/posts/"+post._id,$scope.post).then(function(response){socketio.emit("syncposts"),$uibModalInstance.close()})}}$scope.paging={page:1};var load=function(){$http.get("/posts/paginate",{params:{page:$scope.paging.page}}).then(function(response){$scope.posts=response.data.records,$scope.paging=response.data.paging})};$scope.pageChanged=function(){load()},load(),socketio.on("syncposts",function(){load()}),$scope.open=function(size){$uibModal.open({animation:!0,templateUrl:"createPost.html",controller:NewPostCreated})},$scope.deletePost=function(index){var e=$scope.posts[index];$http["delete"]("/posts/"+e._id).then(function(response){socketio.emit("syncposts")})},$scope.updatePost=function(index){var e=$scope.posts[index];$http.get("/posts/"+e._id).then(function(response){$uibModal.open({animation:!0,templateUrl:"createPost.html",bindToController:!0,controller:updateSelectedPost,resolve:{post:function(){return response.data}}})})},$scope.fieldName="date",$scope.reverse=!1,$scope.sortBy=function(fieldName){$scope.reverse=$scope.fieldName===fieldName&&!$scope.reverse,$scope.fieldName=fieldName}}])}();